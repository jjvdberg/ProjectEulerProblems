using System;

public class EvenFibonacciNumbers {

    public static int RecursiveFibonacci(int nr) {

        if (nr == 0 || nr == 1) {
            return nr;
        }
        return RecursiveFibonacci(nr - 1) + RecursiveFibonacci(nr - 2);
    }

    public static int RegularFibonacci(int max) {
        int FibNr = 2;
        int PreviousNr = 1;
        int total = 0;

        while (total < max) {
            if (FibNr % 2 == 0) {
                total += FibNr;
            }
            int temp = FibNr;
            FibNr += PreviousNr;
            PreviousNr = temp;
        }

        return total;
    }

    public static bool IsEvenNr(int nr) {
        return (nr % 2 == 0);
    }

    /// <summary>
    /// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
    /// By starting with 1 and 2, the first 10 terms will be:
    /// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    /// By considering the terms in the Fibonacci sequence whose values do not exceed 
    /// four million (4000000), find the sum of the even-valued terms.
    /// </summary>
    /// <param name="max">Maximum Fibonacci sequence value</param>
    /// <returns>The sum of all even fibonacci sequences</returns>
    public static int SumOfAllFibonacciEvenNumbers(int max) {

        int sum = 0;
        for (int i = 0; i <= max; i++) {
            int temp = RecursiveFibonacci(i);
            if (temp > max) {
                break;
            }
            if (IsEvenNr(temp)) {
                Console.WriteLine(temp);
                sum += temp;
            }
        }

        return sum;
    }
}